#!/usr/bin/env python

from mixcoatl.admin.api_key import ApiKey
from mixcoatl import resource_utils, utils
from prettytable import PrettyTable
import argparse
import time
import sys
import os

if __name__ == '__main__':
    """ List API Keys from DCM """
    start = time.time()
    parser = argparse.ArgumentParser()
    group_two = parser.add_mutually_exclusive_group()
    group_two.add_argument('--json', action='store_true',
        help='print API response in JSON format.')
    group_two.add_argument('--xml', action='store_true',
        help='print API response in XML format.')
    cmd_args = parser.parse_args()

    results = ApiKey.all()

    print results
    # if cmd_args.xml is True or cmd_args.json is True:
    #     if cmd_args.xml is True:
    #         payload_format = "xml"
    #     else:
    #         payload_format = "json"

    #     print utils.print_format(results, payload_format)
    # else:
    #     table = PrettyTable(["Snapshot ID", "Provider ID", "Snapshot Name", "Group", "Budget", "Date"])
    #     budget_name_cache = dict()
    #     for r in results:
    #         if not budget_name_cache.has_key(r.budget):
    #             budget_name_cache[r.budget] = BillingCode(r.budget).name
    #         budget_name = budget_name_cache[r.budget]
    #         table.add_row([r.snapshot_id,
    #                         r.provider_id,
    #                         r.name,
    #                         r.owning_groups[0]['name'] if hasattr(r, 'owning_groups') else None, 
    #                         budget_name,
    #                         r.created_timestamp])
    #     table.align = 'l'
    #     print(table)

    # if 'DCM_DEBUG' in os.environ:
    #     print 'Results returned in', time.time()-start, 'seconds.'
