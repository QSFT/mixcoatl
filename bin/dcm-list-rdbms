#!/usr/bin/env python

import os
import sys
import time
import pprint
import argparse
from mixcoatl import resource_utils, utils
from mixcoatl.platform.relational_database import RelationalDatabase
from prettytable import PrettyTable


if __name__ == '__main__':
    """ Returns a list of RDBMS. """
    parser = argparse.ArgumentParser()
    parser.add_argument('--verbose', '-v', help='Verbose', action="store_true")

    group_two = parser.add_mutually_exclusive_group()
    group_two.add_argument('--json', action='store_true',
        help='print API response in JSON format.')
    group_two.add_argument('--xml', action='store_true',
        help='print API response in XML format.')

    cmd_args = parser.parse_args()
    results = RelationalDatabase.all()

    if cmd_args.verbose:
        for r in results:
            r.pprint()
    else:
        if cmd_args.xml is True or cmd_args.json is True:
            if cmd_args.xml is True:
                payload_format = "xml"
            else:
                payload_format = "json"

            print utils.print_format(cms, payload_format)
        else:
            table = PrettyTable(["RDBMS Product ID", "Name", "Provider Product ID", "Engine", "Budget Code", "Size"])
            for r in results['relationalDatabases']:
                table.add_row([
                    r['relationalDatabaseId'],
                    r['name'],
                    r['rdbmsProduct']['productId'],
                    r['engine'],
                    r['budget'],
                    r['allocatedStorageInGb']])
                table.align = 'l'
            print(table)

    if 'DCM_DEBUG' in os.environ:
        print 'Results returned in', time.time()-start, 'seconds.'
