#!/usr/bin/env python

from mixcoatl.infrastructure.server_product import ServerProduct
from mixcoatl import resource_utils, utils
from prettytable import PrettyTable
import os
import time
import argparse
import sys

if __name__ == '__main__':
    """ List Server Products """
    start = time.time()
    parser = argparse.ArgumentParser()
    parser.add_argument('--regionid', '-r', help='Region ID')

    group_two = parser.add_mutually_exclusive_group()
    group_two.add_argument('--json', action='store_true',
        help='print API response in JSON format.')
    group_two.add_argument('--xml', action='store_true',
        help='print API response in XML format.')
    group_two.add_argument('--csv', action='store_true',
        help='print API response in XML format.')
    cmd_args = parser.parse_args()

    if cmd_args.regionid != None:
        results = ServerProduct.all(cmd_args.regionid)
    else:
        parser.print_help()
        sys.exit(1)

    if cmd_args.xml is True or cmd_args.json is True or cmd_args.csv is True:
        if cmd_args.xml is True:
            payload_format = "xml"
        elif cmd_args.csv is True:
            payload_format = "csv"
        else:
            payload_format = "json"

        print utils.print_format(results, payload_format)
    else:
        table = PrettyTable(["Server Product ID", "Provider Region ID", "Provider Product ID", "Name", "Platform", "Currency", "Hourly Rate"])
        for r in results:
            table.add_row([
                r.product_id,
                r.provider_region_id,
                r.provider_product_id,
                r.name,
                r.platform,
                r.currency,
                r.hourly_rate])
        table.align = 'l'
        print(table)

    if 'DCM_DEBUG' in os.environ:
        print 'Results returned in', time.time()-start, 'seconds.'
