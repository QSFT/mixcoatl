#!/usr/bin/env python

from mixcoatl.admin.group import Group
from mixcoatl.admin.user import User
from mixcoatl import utils, resource_utils
from prettytable import PrettyTable
import argparse
import pprint
import time
import sys
import os

if __name__ == '__main__':
    """ Returns a list of groups where a user belongs to. """
    start = time.time()
    parser = argparse.ArgumentParser()
    parser.add_argument('--userid', '-u', help='User ID. For example, p100')
    parser.add_argument('--email', '-m', help='E-Mail address of user')

    group_two = parser.add_mutually_exclusive_group()
    group_two.add_argument('--json', action='store_true',
        help='print API response in JSON format.')
    group_two.add_argument('--xml', action='store_true',
        help='print API response in XML format.')
    group_two.add_argument('--csv', action='store_true',
        help='print API response in CSV format.')
    cmd_args = parser.parse_args()

    if cmd_args.userid != None:
        results = resource_utils.get_user(User.all(), vm_login_id=cmd_args.userid)
    elif cmd_args.email != None:
        results = resource_utils.get_user(User.all(), email=cmd_args.email)
    else:
        results = Group.all()

    if cmd_args.xml is True or cmd_args.json is True or cmd_args.csv is True:
        if cmd_args.xml is True:
            payload_format = "xml"
        elif cmd_args.csv is True:
            payload_format = "csv"
        else:
            payload_format = "json"

        print utils.print_format(results, payload_format)
    else:
        table = PrettyTable(["Group ID", "Group Name", "Description", "Status"])
        for r in results:
            table.add_row([
                r.group_id,
                r.name,
                r.description,
                r.status])
        table.align = 'l'
        print(table)

    if 'DCM_DEBUG' in os.environ:
        print 'Results returned in', time.time()-start, 'seconds.'
