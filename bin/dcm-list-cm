#!/usr/bin/env python

import os
import sys
import time
import argparse
from mixcoatl import utils
from mixcoatl.automation.configuration_management_service import ConfigurationManagementService
from prettytable import PrettyTable

if __name__ == '__main__':
    """ Returns a list of CM services. """
    start = time.time()
    parser = argparse.ArgumentParser()
    group_two = parser.add_mutually_exclusive_group()
    group_two.add_argument('--json', action='store_true',
        help='print API response in JSON format.')
    group_two.add_argument('--xml', action='store_true',
        help='print API response in XML format.')
    group_two.add_argument('--csv', action='store_true',
        help='print API response in CSV format.')
    cmd_args = parser.parse_args()
    results = ConfigurationManagementService.all()
    cm_system = {'1': 'Chef', '2': 'Puppet', '3': 'ObjectStore'}

    if cmd_args.xml is True or cmd_args.json is True or cmd_args.csv is True:
        if cmd_args.xml is True:
            payload_format = "xml"
        elif cmd_args.csv is True:
            payload_format = "csv"
        else:
            payload_format = "json"

        print utils.print_format(results, payload_format)
    else:
        table = PrettyTable(["ID", "Type", "Customer", "Name", "Endpoint", "Status"])
        for r in results:
            cm_system_name = cm_system[str(r.cm_system['cm_system_id'])]
            table.add_row([
                r.cm_service_id,
                cm_system_name,
                r.customer['customer_id'],
                r.name,
                r.service_endpoint,
                r.status])
        table.align = 'l'
        print(table)

    if 'DCM_DEBUG' in os.environ:
        print 'Results returned in', time.time()-start, 'seconds.'
