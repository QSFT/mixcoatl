#!/usr/bin/env python

import os, string, random, argparse, sys, time
from termcolor import colored
from prettytable import PrettyTable
from datetime import datetime
from mixcoatl.admin.account import Account
from mixcoatl.geography.region import Region
from mixcoatl.network.firewall import Firewall
from mixcoatl.geography.datacenter import DataCenter
from mixcoatl.network.network import Network
from mixcoatl.infrastructure.machine_image import MachineImage
from mixcoatl.infrastructure.server_product import ServerProduct
from mixcoatl.admin.billing_code import BillingCode
from mixcoatl.infrastructure.server import Server
from mixcoatl.infrastructure.volume import Volume
from mixcoatl.infrastructure.snapshot import Snapshot
from mixcoatl.geography.subscription import Subscription
from mixcoatl.admin.user import User
from mixcoatl.automation.configuration_management_account import ConfigurationManagementAccount
from mixcoatl.automation.configuration_management_service import ConfigurationManagementService
from mixcoatl.admin.job import Job
# from mixcoatl.automation.script import Script
# from mixcoatl.automation.personality import Personality
# from mixcoatl.automation.environment import Environment

print "Starting Mixcoatl 'GET' testing ..."

region_id = random.choice(Region.all(keys_only=True))

print "++ Defaulting to Region #"+str(region_id)
tests = ['Region', 'Firewall', 'Account', 'DataCenter', 'MachineImage', 'Network', 'BillingCode', 'Server', 'ServerProduct', 'Volume', 'Snapshot', 'Subscription', 'ConfigurationManagementAccount', 'ConfigurationManagementService', 'Job', 'User']

for i in tests.sort():
	params = None
	start = time.time()

	if i == 'DataCenter' or i == 'MachineImage' or i == 'ServerProduct':
		params = region_id

	if params is not None:
		print i+'.all('+str(params)+')',
		call = getattr(sys.modules[__name__],i).all(params)
	else:
		print i+'.all()',
		call = getattr(sys.modules[__name__],i).all()

	try:
		if call is not None:
			print 'returned in', round(time.time()-start,3), 'seconds. ',
			print '[ '+colored('OK', 'green')+' ]'
	except:
		print '[ '+colored('FAIL', 'red')+' ]'

